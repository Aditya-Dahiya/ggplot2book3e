[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Solutions (and Beyond) for ggplot2: Elegant Graphics for Data Analysis (3e)",
    "section": "",
    "text": "Welcome to the Solutions Manual and much more for the third edition of ggplot2: Elegant Graphics for Data Analysis (3e) by Hadley Wickham, Danielle Navarro, and Thomas Lin Pedersen.\nThis manual is your indispensable companion for this amazing book on ggplot2 and R graphics.\nInside these pages, you’ll find a rich trove of techniques to extend the extra-ordinary capabilities to ggplot2 and other packages developed by amazing people all over the world to solve the exercises given in the book, and extend them beyond to improve the output.\nI emphasize not just the solving the exercises, but extending ggplot2 capabilities with add-on packages such as gganimate , ggthemes , ggplotly , patchwork , gridExtra , ggrepel , GGally , ggcorrplot , ggmap , and, the various extensions to ggplot2 at the ggplot2 extensions webpage.\nThis website is committed to fostering a collaborative learning environment and offers all it’s code and solutions for free. Happy learning!\n\n\n."
  },
  {
    "objectID": "index.html#author-aditya-dahiya",
    "href": "index.html#author-aditya-dahiya",
    "title": "Solutions (and Beyond) for ggplot2: Elegant Graphics for Data Analysis (3e)",
    "section": "",
    "text": "Welcome to the Solutions Manual and much more for the third edition of ggplot2: Elegant Graphics for Data Analysis (3e) by Hadley Wickham, Danielle Navarro, and Thomas Lin Pedersen.\nThis manual is your indispensable companion for this amazing book on ggplot2 and R graphics.\nInside these pages, you’ll find a rich trove of techniques to extend the extra-ordinary capabilities to ggplot2 and other packages developed by amazing people all over the world to solve the exercises given in the book, and extend them beyond to improve the output.\nI emphasize not just the solving the exercises, but extending ggplot2 capabilities with add-on packages such as gganimate , ggthemes , ggplotly , patchwork , gridExtra , ggrepel , GGally , ggcorrplot , ggmap , and, the various extensions to ggplot2 at the ggplot2 extensions webpage.\nThis website is committed to fostering a collaborative learning environment and offers all it’s code and solutions for free. Happy learning!\n\n\n."
  },
  {
    "objectID": "solutions.html",
    "href": "solutions.html",
    "title": "Chapter-wise Solutions",
    "section": "",
    "text": "Order By\n       Default\n         \n          Title\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\n\nTitle\n\n\nSubtitle\n\n\n\n\n\n\nChapter 1\n\n\nIntroduction\n\n\n\n\nChapter 10\n\n\nPosition Scales and axes\n\n\n\n\nChapter 11\n\n\nColour Scales and Legends\n\n\n\n\nChapter 12\n\n\nOther aesthetics\n\n\n\n\nChapter 13\n\n\nBuild a plot layer by layer\n\n\n\n\nChapter 14\n\n\nScales and guides\n\n\n\n\nChapter 15\n\n\nCoordinate Systems\n\n\n\n\nChapter 16\n\n\nFaceting\n\n\n\n\nChapter 17\n\n\nThemes\n\n\n\n\nChapter 18\n\n\nProgramming with ggplot2\n\n\n\n\nChapter 19\n\n\nInternals of ggplot2\n\n\n\n\nChapter 2\n\n\nFirst Steps\n\n\n\n\nChapter 20\n\n\nExtending ggplot2\n\n\n\n\nChapter 21\n\n\nA case study\n\n\n\n\nChapter 3\n\n\nIndividual geoms\n\n\n\n\nChapter 4\n\n\nCollective geoms\n\n\n\n\nChapter 5\n\n\nStatistical Summaries\n\n\n\n\nChapter 6\n\n\nMaps\n\n\n\n\nChapter 7\n\n\nNetworks\n\n\n\n\nChapter 8\n\n\nAnnotations\n\n\n\n\nChapter 9\n\n\nArranging Plots\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "Chapter8.html",
    "href": "Chapter8.html",
    "title": "Chapter 8",
    "section": "",
    "text": "Warning\n\n\n\nSolutions for this chapter are under construction."
  },
  {
    "objectID": "Chapter6.html",
    "href": "Chapter6.html",
    "title": "Chapter 6",
    "section": "",
    "text": "Warning\n\n\n\nSolutions for this chapter are under construction."
  },
  {
    "objectID": "Chapter4.html",
    "href": "Chapter4.html",
    "title": "Chapter 4",
    "section": "",
    "text": "Warning\n\n\n\nSolutions for this chapter are under construction."
  },
  {
    "objectID": "Chapter21.html",
    "href": "Chapter21.html",
    "title": "Chapter 21",
    "section": "",
    "text": "Warning\n\n\n\nSolutions for this chapter are under construction."
  },
  {
    "objectID": "Chapter2.html",
    "href": "Chapter2.html",
    "title": "Chapter 2",
    "section": "",
    "text": "Warning\n\n\n\nSolutions for this chapter are under construction."
  },
  {
    "objectID": "Chapter18.html",
    "href": "Chapter18.html",
    "title": "Chapter 18",
    "section": "",
    "text": "Warning\n\n\n\nSolutions for this chapter are under construction."
  },
  {
    "objectID": "Chapter16.html",
    "href": "Chapter16.html",
    "title": "Chapter 16",
    "section": "",
    "text": "Warning\n\n\n\nSolutions for this chapter are under construction."
  },
  {
    "objectID": "Chapter14.html",
    "href": "Chapter14.html",
    "title": "Chapter 14",
    "section": "",
    "text": "Warning\n\n\n\nSolutions for this chapter are under construction."
  },
  {
    "objectID": "Chapter12.html",
    "href": "Chapter12.html",
    "title": "Chapter 12",
    "section": "",
    "text": "Warning\n\n\n\nSolutions for this chapter are under construction."
  },
  {
    "objectID": "Chapter10.html",
    "href": "Chapter10.html",
    "title": "Chapter 10",
    "section": "",
    "text": "Warning\n\n\n\nSolutions for this chapter are under construction."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "Welcome to the quirky realm of Aditya Dahiya, your friendly neighborhood Indian Administrative Service (IAS) officer, currently working as the Director and Special Secretary in the Government of Haryana, India. Amidst the daily avalanche of files and meetings that could rival a paper mountain, Aditya somehow manages to sneak in quality time with his true loves: data visualization and health financing data. Think of him as your data-wrangling, file-taming, bureaucracy-battling guide with a slightly skewed sense of humor. Need more bureaucratic banter or data insights? Connect with Aditya on LinkedIn or shoot him an email – he promises it won’t be as formal as a government memo!"
  },
  {
    "objectID": "about.html#education",
    "href": "about.html#education",
    "title": "About",
    "section": "Education",
    "text": "Education\nHarvard University | Boston, MA MPH in Global Health | Aug 2021 - May 2022\nAll India Institute of Medical Sciences | New Delhi, India MBBS in Medicine | Aug 2005-Dec 2010"
  },
  {
    "objectID": "about.html#experience",
    "href": "about.html#experience",
    "title": "About",
    "section": "Experience",
    "text": "Experience\nIndian Administrative Service | Director | Aug 2011 - present\nNeuro-Radiology, AIIMS New Delhi | Junior Resident Doctor | Jan 2011 - Aug 2011"
  },
  {
    "objectID": "Chapter1.html",
    "href": "Chapter1.html",
    "title": "Chapter 1",
    "section": "",
    "text": "Note\n\n\n\nThis chapter has no exercises, hence there are no solutions to display. Instead, we delve into various ggplot2 add-on packages installed in Section 1.5"
  },
  {
    "objectID": "Chapter11.html",
    "href": "Chapter11.html",
    "title": "Chapter 11",
    "section": "",
    "text": "Warning\n\n\n\nSolutions for this chapter are under construction."
  },
  {
    "objectID": "Chapter13.html",
    "href": "Chapter13.html",
    "title": "Chapter 13",
    "section": "",
    "text": "Warning\n\n\n\nSolutions for this chapter are under construction."
  },
  {
    "objectID": "Chapter15.html",
    "href": "Chapter15.html",
    "title": "Chapter 15",
    "section": "",
    "text": "Warning\n\n\n\nSolutions for this chapter are under construction."
  },
  {
    "objectID": "Chapter17.html",
    "href": "Chapter17.html",
    "title": "Chapter 17",
    "section": "",
    "text": "Warning\n\n\n\nSolutions for this chapter are under construction."
  },
  {
    "objectID": "Chapter19.html",
    "href": "Chapter19.html",
    "title": "Chapter 19",
    "section": "",
    "text": "Warning\n\n\n\nSolutions for this chapter are under construction."
  },
  {
    "objectID": "Chapter20.html",
    "href": "Chapter20.html",
    "title": "Chapter 20",
    "section": "",
    "text": "Warning\n\n\n\nSolutions for this chapter are under construction."
  },
  {
    "objectID": "Chapter3.html",
    "href": "Chapter3.html",
    "title": "Chapter 3",
    "section": "",
    "text": "Warning\n\n\n\nSolutions for this chapter are under construction."
  },
  {
    "objectID": "Chapter5.html",
    "href": "Chapter5.html",
    "title": "Chapter 5",
    "section": "",
    "text": "Warning\n\n\n\nSolutions for this chapter are under construction."
  },
  {
    "objectID": "Chapter7.html",
    "href": "Chapter7.html",
    "title": "Chapter 7",
    "section": "",
    "text": "Warning\n\n\n\nSolutions for this chapter are under construction."
  },
  {
    "objectID": "Chapter9.html",
    "href": "Chapter9.html",
    "title": "Chapter 9",
    "section": "",
    "text": "Warning\n\n\n\nSolutions for this chapter are under construction."
  },
  {
    "objectID": "Chapter1.html#colorblindness-colorblindness",
    "href": "Chapter1.html#colorblindness-colorblindness",
    "title": "Chapter 1",
    "section": "colorBlindness (Ou 2021)",
    "text": "colorBlindness (Ou 2021)\nThe colorBlindness R package is specifically crafted to curate a diverse array of secure color palettes suitable for various plot types like heatmaps and pie charts. Its aim is to ensure that the resulting visualizations are accessible and comprehensible to all users. Additionally, it features a Color Vision Deficiency (CVD) simulator, a tool that facilitates the emulation of color vision deficiencies for improved accessibility.\n\n\nCode\nlibrary(colorBlindness)\ng1 &lt;- flights |&gt; \n  group_by(month, day) |&gt; \n  count() |&gt; \n  ggplot(aes(x = day,\n             y = month,\n             fill = n)) +\n  geom_tile() +\n  theme_minimal() +\n  labs(y = \"Month\", x = \"Day of the month\") +\n  scale_y_continuous(breaks = 1:12,\n                     labels = month.name) +\n  scale_x_continuous(breaks = seq(1, 31, 5)) +\n  theme(panel.grid = element_blank(),\n        plot.title.position = \"plot\")\n\n\nFigure 1 shows a basic heat-map created with geom_tile() and nycflights13 (Wickham 2021) data-set.\n\n\nCode\ng1 + labs(title = \"Default ggplot2 colours\")\n\n\n\n\n\nFigure 1: Heat-map with default ggplot2 colours\n\n\n\n\nFigure 2 shows a basic heat-map created with geom_tile() and nycflights13 (Wickham 2021) data-set.\n\n\nCode\ng1 + scale_fill_viridis_c() + labs(title = \"Viridis Colours\")\n\n\n\n\n\nFigure 2: Same heat map with viridis colours\n\n\n\n\nNow, using cvdPlot() from the package colorBlindness to check the plot’s view ( Figure 3 ) to different people.\n\n\nCode\ncvdPlot(g1 + scale_fill_viridis_c())\n\n\n\n\n\nFigure 3: Showing heat-map with different color blindness types using cvdPlot()"
  },
  {
    "objectID": "Chapter1.html#directlabels-directlabels",
    "href": "Chapter1.html#directlabels-directlabels",
    "title": "Chapter 1",
    "section": "directlabels (Hocking 2023)",
    "text": "directlabels (Hocking 2023)\nThis package allows us to label plots easily, using various methods listed here.\n\n\nCode\nlibrary(directlabels)\ng2 &lt;- flights |&gt; \n  filter(carrier %in% c(\"AA\", \"DL\", \"UA\", \"US\", \"WN\")) |&gt; \n  group_by(month, carrier) |&gt; \n  summarise(avg_delay = mean(dep_delay, na.rm = TRUE)) |&gt; \n  ggplot(aes(x = month, y = avg_delay,\n             group = carrier, \n             col = carrier)) +\n  geom_line() +\n  geom_point() +\n  theme_classic() +\n  labs(x = \"Month\", y = \"Average Departure Delay (min.)\") +\n  scale_x_continuous(breaks = 1:12, labels = month.abb) +\n  scale_color_viridis_d()\n\n\n`summarise()` has grouped output by 'month'. You can override using the\n`.groups` argument.\n\n\nCode\ngridExtra::grid.arrange(\ng2 |&gt; direct.label(method = \"angled.boxes\"), \n\ng2 |&gt; direct.label(method = \"last.polygons\"), \n\ng2 |&gt; direct.label(method = \"top.bumpup\"), \n\ng2 |&gt; direct.label(method = \"first.polygons\"),\nnrow = 2, ncol = 2)"
  },
  {
    "objectID": "Chapter1.html#colorblindness",
    "href": "Chapter1.html#colorblindness",
    "title": "Chapter 1",
    "section": "colorBlindness",
    "text": "colorBlindness\nThe colorBlindness R package (Ou 2021) is specifically crafted to curate a diverse array of secure color palettes suitable for various plot types like heat-maps and pie charts. Its aim is to ensure that the resulting visualizations are accessible and comprehensible to all users. Additionally, it features a Color Vision Deficiency (CVD) simulator, a tool that facilitates the emulation of color vision deficiencies for improved accessibility.\nFigure 1 shows a basic heat-map created with geom_tile() and nycflights13 (Wickham 2021) data-set with different colour schemes.\n\nCodelibrary(colorBlindness)\ng1 &lt;- flights |&gt; \n  group_by(month, day) |&gt; \n  count() |&gt; \n  ggplot(aes(x = day,\n             y = month,\n             fill = n)) +\n  geom_tile() +\n  theme_minimal() +\n  labs(y = \"Month\", x = \"Day of the month\") +\n  scale_y_continuous(breaks = 1:12,\n                     labels = month.name) +\n  scale_x_continuous(breaks = seq(1, 31, 5)) +\n  theme(panel.grid = element_blank(),\n        plot.title.position = \"plot\")\n\ng1 + labs(title = \"Default ggplot2 colours\")\n\ng1 + scale_fill_viridis_c() + labs(title = \"Viridis Colours\")\n\n\n\n\n\n(a) Using default ggplot2 colour scheme\n\n\n\n\n\n(b) Using viridis colour scheme for colorblindness\n\n\n\nFigure 1: Heat-map of number of flights ever day in different months of 2013\n\n\n\nNow, using cvdPlot() from the package colorBlindness to check the plot’s view ( Figure 2 ) to different people.\n\nCodecvdPlot(g1 + scale_fill_viridis_c())\n\n\n\nFigure 2: Showing heat-map with different color blindness types using cvdPlot()"
  },
  {
    "objectID": "Chapter1.html#directlabels",
    "href": "Chapter1.html#directlabels",
    "title": "Chapter 1",
    "section": "directlabels",
    "text": "directlabels\nThe directlabels package (Hocking 2023) allows us to label plots easily, using various methods listed here. An example is shown in Figure 3 .\n\nCodelibrary(directlabels)\ng2 &lt;- flights |&gt; \n  filter(carrier %in% c(\"AA\", \"DL\", \"UA\", \"US\", \"WN\")) |&gt; \n  group_by(month, carrier) |&gt; \n  summarise(avg_delay = mean(dep_delay, na.rm = TRUE)) |&gt; \n  ggplot(aes(x = month, y = avg_delay,\n             group = carrier, \n             col = carrier)) +\n  geom_line() +\n  geom_point() +\n  theme_classic() +\n  labs(x = \"Month\", y = \"Average Departure Delay (min.)\") +\n  scale_x_continuous(breaks = 1:12, labels = month.abb) +\n  scale_color_viridis_d()\n\ngridExtra::grid.arrange(\ng2 |&gt; direct.label(method = \"angled.boxes\"), \n\ng2 |&gt; direct.label(method = \"last.polygons\"), \n\ng2 |&gt; direct.label(method = \"top.bumpup\"), \n\ng2 |&gt; direct.label(method = \"first.polygons\"),\nnrow = 2, ncol = 2)\n\n\n\nFigure 3: Using direct labels in a line plot of average delay of five major airline carriers in different months over the course of 2013"
  },
  {
    "objectID": "Chapter1.html#ggforce",
    "href": "Chapter1.html#ggforce",
    "title": "Chapter 1",
    "section": "ggforce",
    "text": "ggforce\nThe ggforce package (Pedersen 2022) is, in effect, a collection of geoms and other features to add on to the ggplot2 collection. Once particularly nice one is facet_zoom() as depicted in Figure 4 . This feature allows you to focus on a specific portion of the data by creating a zoomed-in view, while preserving the complete dataset in a separate panel. We can zoom in on either the x-axis, the y-axis, or both simultaneously.\n\nCodelibrary(ggforce)\nlibrary(ggthemes)\n\nflights |&gt; \n  filter(carrier == \"AA\" & month == 1) |&gt;\n  ggplot(aes(x = dep_delay,\n             y = arr_delay)) +\n  geom_jitter(alpha = 0.2) +\n  geom_smooth(se = FALSE, col = \"red\") + \n  facet_zoom(y = arr_delay &lt; 0,\n             x = dep_delay &lt; 0) + \n  labs(y = \"Arrival Delay (minutes)\", x = \"Departure Delay (minutes)\")\n\n\n\nFigure 4: Use of facet_zoom() to show that relation between Departure Delay and Arrival Delay of American Airlines flights holds true even for flights landing earlier than scheduled\n\n\n\nAnother nice one is facet_wrap_paginate() which enables you to break down a faceted plot into multiple pages. You can specify the number of rows and columns per page, along with the page number you want to plot. The function will automatically generate only the appropriate panels. The Figure 5 shows an example with a for(){} loop.\n\nCodefor (i in 1:2) {\n\n  print(\n    flights |&gt; \n      filter(carrier == \"AA\") |&gt;\n      ggplot(aes(x = dep_time, \n                 y = dep_delay)) +\n      geom_jitter(alpha = 0.1, \n                 shape = 19) +\n      geom_smooth(col = \"red\") +\n      facet_wrap_paginate(~ month,\n                          nrow = 3,\n                          ncol = 2,\n                          scales = \"free_y\",\n                          page = i) +\n      scale_x_continuous(limits = c(500, 2400)) +\n      theme_classic() +\n      labs(x = \"Departure Time (hrs)\", y = \"Departure delay (min.)\")\n  )\n}\n\n\n\n\n\n(a) First half of the year: Jan-Jun\n\n\n\n\n\n\n\n(b) Second half of the year: Jul-Dec\n\n\n\nFigure 5: Use of facet_wrap_paginate() to create plots of realtion between American Airlines flights’ departure time and departure delay for different months"
  },
  {
    "objectID": "Chapter1.html#gghighlight",
    "href": "Chapter1.html#gghighlight",
    "title": "Chapter 1",
    "section": "gghighlight",
    "text": "gghighlight\nThe gghighlight package (Yutani 2022) is an amazing tool to highlight only types of groups in a plot, and can even be used with faceting. The Figure 6 shows an example with a single plot, and Figure 7 shows the same example with faceting.\n\nCodeflights |&gt; \n  mutate(dep_hour = dep_time %/% 100) |&gt; \n  group_by(carrier, dep_hour) |&gt; \n  summarize(avg_delay = mean(dep_delay, na.rm = TRUE)) |&gt; \n  ggplot(aes(x = dep_hour,\n             y = avg_delay,\n             col = carrier,\n             group = carrier)) + \n  geom_line(lwd = 1, alpha = 0.75) +\n  xlim(c(5, 24)) + ylim(c(-10, 300)) +\n  labs(x = \"Departure Time (hr.)\", y = \"Average Departure Delay (min.)\") + \n  theme_minimal()\n\nflights |&gt; \n  mutate(dep_hour = dep_time %/% 100) |&gt; \n  group_by(carrier, dep_hour) |&gt; \n  summarize(avg_delay = mean(dep_delay, na.rm = TRUE)) |&gt; \n  ggplot(aes(x = dep_hour,\n             y = avg_delay,\n             col = carrier,\n             group = carrier)) + \n  geom_line(lwd = 1, alpha = 0.75) +\n  xlim(c(5, 24)) + ylim(c(-10, 300)) +\n  labs(x = \"Departure Time (hr.)\", y = \"Average Departure Delay (min.)\") + \n  theme_minimal() +\n  gghighlight::gghighlight(carrier == \"AA\")\n\n\n\n\n\n(a) Without any gghighlight: it is tough to make comparisons, say, for example of American Airlines with others\n\n\n\n\n\n(b) With use of gghighlight: we can easily compare American Airlines to others\n\n\n\nFigure 6: Line graph showing the average departure delay (in minutes) of different airliens at different departure times during the day\n\n\n\n\nCodeflights |&gt; \n  mutate(dep_hour = dep_time %/% 100) |&gt; \n  group_by(carrier, dep_hour) |&gt; \n  summarize(avg_delay = mean(dep_delay, na.rm = TRUE)) |&gt; \n  ggplot(aes(x = dep_hour,\n             y = avg_delay,\n             col = carrier,\n             group = carrier)) + \n  geom_line(lwd = 1, alpha = 0.75) +\n  xlim(c(5, 24)) + ylim(c(-10, 300)) +\n  theme_minimal() +\n  gghighlight::gghighlight(carrier %in% c(\"AA\", \"UA\", \"US\", \"DL\")) +\n  facet_wrap(~ carrier) +\n  scale_color_brewer(palette = \"Dark2\") +\n  labs(x = \"Departure Time (hr.)\", y = \"Average Departure Delay (min.)\",\n       title = \"Comparing depature delays of 4 major carriers with others\") \n\n\n\nFigure 7: Using gghighlight with faceting allows use to see the average departure delay (over the course of a typical day) for 4 major airlines compared to others"
  },
  {
    "objectID": "Chapter1.html#ggnewscale",
    "href": "Chapter1.html#ggnewscale",
    "title": "Chapter 1",
    "section": "ggnewscale",
    "text": "ggnewscale\nThe ggnewscale package (Campitelli 2023) allows you to use two or more different color scales (or, any other scales like fill, shape, linetype etc. in the same plot. The Figure 8 is directly copied from the website of the package, and credits to\n\nCodelibrary(ggnewscale)\n# Equivalent to melt(volcano)\ntopography &lt;- expand.grid(x = 1:nrow(volcano),\n                          y = 1:ncol(volcano))\ntopography$z &lt;- c(volcano)\n\n# point measurements of something at a few locations\nset.seed(42)\nmeasurements &lt;- data.frame(x = runif(30, 1, 80),\n                           y = runif(30, 1, 60),\n                           thing = rnorm(30))\n\nggplot(mapping = aes(x, y)) +\n  geom_contour(data = topography, aes(z = z, color = stat(level))) +\n  # Color scale for topography\n  scale_color_viridis_c(option = \"D\") +\n  # geoms below will use another color scale\n  new_scale_color() +\n  geom_point(data = measurements, size = 3, aes(color = thing)) +\n  # Color scale applied to geoms added after new_scale_color()\n  scale_color_viridis_c(option = \"A\") +\n  theme_void() + \n  labs(title = \"The ggnewscale package allows use of multiple color scales\") +\n  theme(legend.position = \"bottom\")\n\n\n\nFigure 8: An example of using two different color scales in a single ggplot2 object with ggnewscale package\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nI intend to add more packages as and when I come across them. Watch out for this space in the future too."
  }
]